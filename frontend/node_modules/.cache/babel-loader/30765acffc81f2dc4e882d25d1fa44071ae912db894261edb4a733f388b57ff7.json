{"ast":null,"code":"//Remove this line\n//import logo from './logo.svg';\nimport React,{createContext,useState}from\"react\";import'./App.css';import Navbar from'./components/Navbar';import{BrowserRouter,Routes,Route}from\"react-router-dom\";import Home from\"./screens/Home\";import SignUp from\"./components/SignUp\";import SignIn from\"./components/SignIn\";import Profile from\"./screens/Profile\";import{ToastContainer}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.css\";import Createpost from\"./screens/Createpost\";import{LoginContext}from\"./context/LoginContext\";import Modal from\"./components/Modal\";import UserProfile from\"./components/UserProfile\";import MyFollowingPost from\"./screens/MyFollowingPost\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[userLogin,setUserLogin]=useState(false);const[modalOpen,setModalOpen]=useState(false);return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(LoginContext.Provider,{value:{setUserLogin,setModalOpen},children:[/*#__PURE__*/_jsx(Navbar,{login:userLogin}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signup\",element:/*#__PURE__*/_jsx(SignUp,{})}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",element:/*#__PURE__*/_jsx(SignIn,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile\",element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/createPost\",element:/*#__PURE__*/_jsx(Createpost,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile/:userid\",element:/*#__PURE__*/_jsx(UserProfile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/followingpost\",element:/*#__PURE__*/_jsx(MyFollowingPost,{})})]}),/*#__PURE__*/_jsx(ToastContainer,{theme:\"dark\"}),modalOpen&&/*#__PURE__*/_jsx(Modal,{setModalOpen:setModalOpen})]})})});};export default App;","map":{"version":3,"names":["React","createContext","useState","Navbar","BrowserRouter","Routes","Route","Home","SignUp","SignIn","Profile","ToastContainer","Createpost","LoginContext","Modal","UserProfile","MyFollowingPost","jsx","_jsx","jsxs","_jsxs","App","userLogin","setUserLogin","modalOpen","setModalOpen","children","className","Provider","value","login","path","element","exact","theme"],"sources":["C:/Users/Rambo/Desktop/Twinsta/backend/frontend/src/App.js"],"sourcesContent":["//Remove this line\n//import logo from './logo.svg';\nimport React,{createContext, useState} from \"react\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport Profile from \"./screens/Profile\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Createpost from \"./screens/Createpost\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Modal from \"./components/Modal\";\nimport UserProfile from \"./components/UserProfile\";\nimport MyFollowingPost from \"./screens/MyFollowingPost\";\n\nfunction App() {\n  const [userLogin, setUserLogin] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false)\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <LoginContext.Provider value={{ setUserLogin, setModalOpen }}>\n        <Navbar login={userLogin} />\n        <Routes>\n          <Route path=\"/\" element={<Home />}></Route>\n          <Route path=\"/signup\" element={<SignUp />}></Route>\n          <Route path=\"/signin\" element={<SignIn />}></Route>\n          <Route exact path=\"/profile\" element={<Profile />}></Route>\n          <Route path=\"/createPost\" element={<Createpost />}></Route>\n          <Route path=\"/profile/:userid\" element={<UserProfile />}></Route>\n          <Route path=\"/followingpost\" element={<MyFollowingPost />}></Route>\n        </Routes>\n        <ToastContainer theme=\"dark\" />\n\n        {modalOpen && <Modal setModalOpen={setModalOpen}></Modal>}\n\n        </LoginContext.Provider>\n        \n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA;AACA;AACA,MAAO,CAAAA,KAAK,EAAEC,aAAa,CAAEC,QAAQ,KAAO,OAAO,CACnD,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAC/D,MAAO,CAAAC,IAAI,KAAM,gBAAgB,CACjC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,OAAO,KAAM,mBAAmB,CACvC,OAASC,cAAc,KAAQ,gBAAgB,CAC/C,MAAO,uCAAuC,CAC9C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,OAASC,YAAY,KAAQ,wBAAwB,CACrD,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,eAAe,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAEjD,mBACEgB,IAAA,CAACd,aAAa,EAAAsB,QAAA,cACZR,IAAA,QAAKS,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBN,KAAA,CAACP,YAAY,CAACe,QAAQ,EAACC,KAAK,CAAE,CAAEN,YAAY,CAAEE,YAAa,CAAE,CAAAC,QAAA,eAC7DR,IAAA,CAACf,MAAM,EAAC2B,KAAK,CAAER,SAAU,CAAE,CAAC,cAC5BF,KAAA,CAACf,MAAM,EAAAqB,QAAA,eACLR,IAAA,CAACZ,KAAK,EAACyB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEd,IAAA,CAACX,IAAI,GAAE,CAAE,CAAQ,CAAC,cAC3CW,IAAA,CAACZ,KAAK,EAACyB,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEd,IAAA,CAACV,MAAM,GAAE,CAAE,CAAQ,CAAC,cACnDU,IAAA,CAACZ,KAAK,EAACyB,IAAI,CAAC,SAAS,CAACC,OAAO,cAAEd,IAAA,CAACT,MAAM,GAAE,CAAE,CAAQ,CAAC,cACnDS,IAAA,CAACZ,KAAK,EAAC2B,KAAK,MAACF,IAAI,CAAC,UAAU,CAACC,OAAO,cAAEd,IAAA,CAACR,OAAO,GAAE,CAAE,CAAQ,CAAC,cAC3DQ,IAAA,CAACZ,KAAK,EAACyB,IAAI,CAAC,aAAa,CAACC,OAAO,cAAEd,IAAA,CAACN,UAAU,GAAE,CAAE,CAAQ,CAAC,cAC3DM,IAAA,CAACZ,KAAK,EAACyB,IAAI,CAAC,kBAAkB,CAACC,OAAO,cAAEd,IAAA,CAACH,WAAW,GAAE,CAAE,CAAQ,CAAC,cACjEG,IAAA,CAACZ,KAAK,EAACyB,IAAI,CAAC,gBAAgB,CAACC,OAAO,cAAEd,IAAA,CAACF,eAAe,GAAE,CAAE,CAAQ,CAAC,EAC7D,CAAC,cACTE,IAAA,CAACP,cAAc,EAACuB,KAAK,CAAC,MAAM,CAAE,CAAC,CAE9BV,SAAS,eAAIN,IAAA,CAACJ,KAAK,EAACW,YAAY,CAAEA,YAAa,CAAQ,CAAC,EAElC,CAAC,CAErB,CAAC,CACO,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}